{"version":3,"sources":["AppNavbar.js","Home.js","ClientList.js","ClientEdit.js","ClientChart.js","useGoogleCharts.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","Home","Container","fluid","Button","ClientList","clients","remove","fetch","then","response","json","data","id","a","method","headers","updatedClients","filter","i","clientList","map","client","style","whiteSpace","name","email","Number","amount","toFixed","discount","billingDate","ButtonGroup","size","onClick","className","Table","width","ClientEdit","emptyItem","item","handleChange","handleSubmit","match","params","event","target","value","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","onChange","autoComplete","placeholder","min","max","withRouter","App","stockData","result","chartRecords","chartData","str","date","split","Date","getFullYear","toString","open","close","low","high","length","console","log","height","chartType","loader","options","chart","subtitle","vAxis","minValue","maxValue","hAxis","rootProps","React","useGoogleCharts","path","exact","component","ClientChart","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7df275ef.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isOpen: false};\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n        </Navbar>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <Button color=\"link\"><Link to=\"/clients\">Clients</Link></Button>\r\n                    <Button color=\"link\"><Link to=\"/data\">Clients Chart</Link></Button>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ClientList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {clients: []};\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/clients')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({clients: data}));\r\n    }\r\n\r\n    async remove(id) {\r\n        await fetch(`/clients/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedClients = [...this.state.clients].filter(i => i.id !== id);\r\n            this.setState({clients: updatedClients});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {clients} = this.state;\r\n\r\n        const clientList = clients.map(client => {\r\n            return <tr key={client.id}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{client.name}</td>\r\n                <td>{client.email}</td>\r\n                <td>{Number((client.amount).toFixed(2))}</td>\r\n                <td>{Number((client.discount).toFixed(2))}%</td>\r\n                <td>{client.billingDate}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/clients/\" + client.id}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(client.id)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Button color=\"success\" tag={Link} to=\"/clients/new\">Add Client</Button>\r\n                    </div>\r\n                    <h3>Clients</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"25%\">Name</th>\r\n                            <th width=\"20%\">Email</th>\r\n                            <th width=\"15%\">Amount</th>\r\n                            <th width=\"15%\">Discount</th>\r\n                            <th width=\"15%\">Billing Date</th>\r\n                            <th width=\"15%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {clientList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClientList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass ClientEdit extends Component {\r\n\r\n    emptyItem = {\r\n        name: '',\r\n        email: ''\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.id !== 'new') {\r\n            const client = await (await fetch(`/clients/${this.props.match.params.id}`)).json();\r\n            this.setState({item: client});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({item});\r\n    }\r\n\r\nasync handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    await fetch('/clients' + (item.id ? '/' + item.id : ''), {\r\n        method: (item.id) ? 'PUT' : 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/clients');\r\n}\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2>{item.id ? 'Edit Client' : 'Add Client'}</h2>;\r\n\r\n        return <div>\r\n            <AppNavbar/>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\r\n                               onChange={this.handleChange} autoComplete=\"name\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\r\n                               onChange={this.handleChange} autoComplete=\"email\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"amount\">Amount</Label>\r\n                        <Input type=\"text\" name=\"amount\" id=\"amount\" value={item.amount || ''}\r\n                               onChange={this.handleChange} autoComplete=\"amount\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"discount\">Discount</Label>\r\n                        <Input type=\"text\" name=\"discount\" id=\"discount\" value={item.discount || ''}\r\n                               onChange={this.handleChange} autoComplete=\"discount\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"billingDate\">Billing Date</Label>\r\n                        <input type=\"date\" name=\"billingDate\" id=\"billingDate\" value={item.billingDate || ''}\r\n                               onChange={this.handleChange} placeholder=\"dd/mm/yyyy\" min=\"1997-01-01\" max=\"2030-12-31\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/clients\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(ClientEdit);","import React from 'react';\r\nimport { Chart } from \"react-google-charts\";\r\nimport 'chartjs-plugin-streaming';\r\n\r\nexport default class App extends React.Component {\r\n\tconstructor(props) {\r\n        super(props);\r\n        this.state = {stockData: []};\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/data')\r\n            .then(response => response.json())\r\n            .then(result => this.setState({stockData: result}));\r\n    }\r\n    \r\n  render() {\r\n\tconst {stockData} = this.state;\r\n\tvar header = [\r\n\t\t      'Year',\r\n\t\t      'Open',\r\n\t\t      'Close',\r\n\t\t      'Low',\r\n\t\t      'High'\t\t      \t\t      \r\n\t\t    ];\r\n\tvar chartRecords = [];\r\n\tchartRecords.push(header);\r\n\tvar chartData = stockData.map((data) => {\r\n\t\tvar str = data.date.split(\"-\");\r\n\t\tvar dateObj = new Date(str[1]+\"/\"+str[2]+\"/\"+str[0]);\r\n\t\tvar year = dateObj.getFullYear().toString();\r\n\t\tvar open = data.open;\r\n\t\tvar close = data.close;\r\n\t\tvar low = data.low;\r\n\t\tvar high = data.high;\t\t\r\n\t\t\r\n\t\treturn [year,open,close,low,high];\r\n\t});\r\n\t\r\n\tfor(var i=0;i<chartData.length;i++){\r\n\t\tchartRecords.push(chartData[i]);\r\n\t}\r\n\t\r\n\tconsole.log(chartRecords);\r\n\treturn (\r\n\t\t    <Chart\r\n\t\t\t  width={'100%'}\r\n\t\t\t  height={'600px'}\r\n\t\t\t  chartType=\"Line\"\r\n\t\t\t  loader={<div>Loading Chart</div>}\r\n\t\t\t  data={chartRecords}\r\n\t\t\t  options={{\r\n\t\t\t    chart: {\r\n\t\t\t      title: 'Yearly Tesla Stock Chart',\r\n\t\t\t      subtitle: 'in Percentage(%)',\r\n\t\t\t    },\r\n\t\t\t    vAxis: {title: 'Stock Prices(%)', minValue: 0, maxValue: 100},\r\n\t    \t\thAxis: {title: 'Years', minValue: 2000, maxValue: 2050},\r\n\t\t\t  }}\r\n\t\t\t  rootProps={{ 'data-testid': '3' }}\r\n\t\t\t/>\r\n\t\t  );\r\n\t}\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nfunction useGoogleCharts () {\r\n  const [google, setGoogle] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        if (!google) {\r\n            const head = document.head;\r\n\t\t\tlet script = document.getElementById('googleChartsScript');\r\n\t\t\tif (!script) {\r\n\t\t\t    script = document.createElement('script');\r\n\t\t\t    script.src = 'https://www.gstatic.com/charts/loader.js';\r\n\t\t\t    script.id = 'googleChartsScript';\r\n\t\t\t    script.onload = () => {\r\n\t\t\t        if (window.google && window.google.charts) {\r\n\t\t\t            window.google.charts.load('current', {'packages':['corechart']});\r\n\t\t\t\r\n\t\t\t            window.google.charts.setOnLoadCallback(() => setGoogle(window.google))\r\n\t\t\t        }\r\n\t\t\t    };\r\n\t\t\t    head.appendChild(script);\r\n\t\t\t} else if (window.google && window.google.charts && window.google.visualization) {\r\n\t\t\t    setGoogle(window.google);\r\n\t\t\t}\r\n        }\r\n   }, [google]);\r\n\r\n  return google;\r\n}\r\n\r\nexport default useGoogleCharts;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport ClientList from './ClientList';\r\nimport ClientEdit from \"./ClientEdit\";\r\nimport ClientChart from \"./ClientChart\";\r\nimport useGoogleCharts from './useGoogleCharts';\r\n\r\nclass App extends Component {\r\n  render() {\r\n\t\r\n    return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact={true} component={Home}/>\r\n            <Route path='/clients' exact={true} component={ClientList}/>\r\n            <Route path='/clients/:id' component={ClientEdit}/>\r\n            <Route path='/data' exact={true} component={ClientChart}/>\r\n          </Switch>\r\n        </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}